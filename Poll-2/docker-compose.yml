volumes:
  pgdata:
  static:
  media:

networks:
  app-network:
    driver: bridge

x-restart-policy: &restart-policy
  restart: always

services:

  django:
    build:
      context: .
    ports:
      - '8000:8000'
    container_name: django
    env_file:
      - docker/env/.env.prod
    volumes:
      - ./:/app
      - static:/app/static
      - media:/app/media
    depends_on:
      - postgres
      - redis
    entrypoint:
      - /bin/sh
      - -c
      - |
        python manage.py collectstatic --no-input &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        gunicorn --workers=4 --reload --max-requests=1000 backend.wsgi -b 0.0.0.0:8000""
    networks:
      - app-network
    <<: *restart-policy

  nginx:
    container_name: nginx
    working_dir: /app
    image: nginx:stable-alpine
    ports:
      - "8080:80"
    volumes:
      - static:/app/static
      - media:/app/media
      - ./docker/nginx/prod/:/etc/nginx/conf.d:ro
      - ./docker/certbot/conf:/etc/letsencrypt:ro
      - ./docker/certbot/www:/var/www/certbot:ro
    depends_on:
      - django
    networks:
      - app-network
    <<: *restart-policy

  postgres:
    image: postgres:alpine
    container_name: postgres
    env_file:
      - docker/env/.env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data/
    networks:
      - app-network
    <<: *restart-policy

  redis:
    image: redis:alpine
    container_name: redis
    env_file:
      - docker/env/.env.prod
    expose:
      - 6379
    volumes:
      - ./docker/redis/data:/data
    networks:
      - app-network
    <<: *restart-policy

  celery-worker:
    build: .
    container_name: celery-worker
    env_file:
      - docker/env/.env.prod
    volumes:
      - ./:/app
      - media:/app/media
    command: celery -A Poll worker --loglevel=info --logfile=./docker/logs/celery-worker.log
    depends_on:
      - redis
    networks:
      - app-network
    <<: *restart-policy

  certbot:
      image: certbot/certbot
      container_name: certbot
      volumes:
          - ./docker/certbot/conf:/etc/letsencrypt:rw
          - ./docker/certbot/www:/var/www/certbot:rw
      command: certonly --webroot --webroot-path=/var/www/certbot/ --email svartha@gmail.com --agree-tos --no-eff-email -d 195.80.50.24 -d www.svartha.ru
      depends_on:
        - nginx